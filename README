#############################################################################
# README: Instruction for performing QC and Zcall according to "Exome-chip QC SOP.v5_sanger-consortium-Neil Robertson.pdf"
# NOTE: one significant departure was made, the initial input ped file from ("Exome-chip QC SOP.v5_sanger-consortium-Neil Robertson.pdf" step 3)
#	was not performed, instead we used the Plink plugin for GenomeStudio to produce the .ped file, alleles were therefore updated in this file
#	and not at the step 8). 
#############################################################################


#----------------------------------------------------------------------------
# Sample QC, from (Exome-chip QC SOP.v5_sanger-consortium-Neil Robertson.pdf, step 4)
#---------------------------------------------------------------------------

1) Run the QC on the .ped file produced from genome studio, in this case as described above using the plink plugin. The argument here is the basename of the ped file
   <basename>.ped. This will output several files, including a list of sample ids to drop.
   NOTE: QC for Gender Discordance, GWAS, Fingerprint Concordance adn PCA Outliers are not presently carried out!
	qsub -q <queue.q> exome.qc.pipeline.v03.sh <basename> 



#----------------------------------------------------------------------------
# Zcall STEPS "Exome-chip QC SOP.v5_sanger-consortium-Neil Robertson.pdf" steps 5,6,7 (8-11 were not performed)
#----------------------------------------------------------------------------

1) populate the ZCALL_PARAMS.sh file with <basename>.report, and other variables e.g. location of data, zcall scripts etc.

2) Run sge_dropBadSamples, this should create a local copy <basename>_dup.report, and output a <basename>_filt.report with the dropped samples.
   Note: this is currently running zcall's additionalscripts/dropSamplesFromReport_FasterVersion.py, so provide these scripts in the zcall_path
   variable otherwise it won't work.
	 qsub -q <queue.q> sge_dropBadSamples <PARAMs_FILE> <SampleDropListFile>

3) Change the ZCALL_PARAMS.sh file to use the new FILTERED report file (e.g. <basename>_filt_faster-version.report).

4) CALIBRATION OF Z (this step can be considered optional, or at least run with a good dataset once for the scanner, recommended dataset n>=1000)
   The Sun Grid Engine job will run in parallel to calculate the thresholds from (z=3:15), then calculate the concordance stats for each threshold
   from the working directory:
	qsub -q <queue.q> sge_calcThresholds
   The R script global.concordance.R will calculate the optimal z. Use the value in R_z-calib/optimal.thresh file to run Zcall. 
	Rscript global.concordance.R

5) Use the threshold file given in the previous step, as an arg to zcall_doCall.sh then run from the working directory, this will 
   carry out the zcall calling on the No-calls:
	qsub sge_zcall ZCALL_PARAMs.sh 10 0.2 "./calibrateZ_out/<thresholdfile>"
   	e.g.
   	qsub sge_zcall ZCALL_PARAMs.sh 10 0.2 "./calibrateZ_out/moorfields_191112_zCall_01_filt_z=10_i=0.2.output.thresholds.txt"

